/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { GeneratorCopyright } from "../GeneratorCopyright";

export class GeneratorCopyright__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    version_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GeneratorCopyright> {
    return super.deploy(
      version_,
      overrides || {}
    ) as Promise<GeneratorCopyright>;
  }
  getDeployTransaction(
    version_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(version_, overrides || {});
  }
  attach(address: string): GeneratorCopyright {
    return super.attach(address) as GeneratorCopyright;
  }
  connect(signer: Signer): GeneratorCopyright__factory {
    return super.connect(signer) as GeneratorCopyright__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GeneratorCopyright {
    return new Contract(address, _abi, signerOrProvider) as GeneratorCopyright;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "version_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "generator",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516105783803806105788339818101604052810190610032919061015a565b806000908051906020019061004892919061004f565b50506102bf565b82805461005b9061022f565b90600052602060002090601f01602090048101928261007d57600085556100c4565b82601f1061009657805160ff19168380011785556100c4565b828001600101855582156100c4579182015b828111156100c35782518255916020019190600101906100a8565b5b5090506100d191906100d5565b5090565b5b808211156100ee5760008160009055506001016100d6565b5090565b6000610105610100846101cc565b61019b565b90508281526020810184848401111561011d57600080fd5b6101288482856101fc565b509392505050565b600082601f83011261014157600080fd5b81516101518482602086016100f2565b91505092915050565b60006020828403121561016c57600080fd5b600082015167ffffffffffffffff81111561018657600080fd5b61019284828501610130565b91505092915050565b6000604051905081810181811067ffffffffffffffff821117156101c2576101c1610290565b5b8060405250919050565b600067ffffffffffffffff8211156101e7576101e6610290565b5b601f19601f8301169050602081019050919050565b60005b8381101561021a5780820151818401526020810190506101ff565b83811115610229576000848401525b50505050565b6000600282049050600182168061024757607f821691505b6020821081141561025b5761025a610261565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6102aa806102ce6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806354fd4d501461003b5780637afa1eed14610059575b600080fd5b610043610077565b6040516100509190610162565b60405180910390f35b610061610109565b60405161006e9190610162565b60405180910390f35b606060008054610086906101d3565b80601f01602080910402602001604051908101604052809291908181526020018280546100b2906101d3565b80156100ff5780601f106100d4576101008083540402835291602001916100ff565b820191906000526020600020905b8154815290600101906020018083116100e257829003601f168201915b5050505050905090565b60606040518060600160405280602f8152602001610246602f9139905090565b600061013482610184565b61013e818561018f565b935061014e8185602086016101a0565b61015781610234565b840191505092915050565b6000602082019050818103600083015261017c8184610129565b905092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156101be5780820151818401526020810190506101a3565b838111156101cd576000848401525b50505050565b600060028204905060018216806101eb57607f821691505b602082108114156101ff576101fe610205565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f830116905091905056fe68747470733a2f2f766974746f6d696e61636f72692e6769746875622e696f2f65726332302d67656e657261746f72a264697066735822122033d2a283c9ecf8e30a9beb08ad1116a1890f7500757662f50cc020476c2830ef64736f6c63430008000033";
